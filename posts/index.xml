<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - MyBlog</title>
        <link>https://msdemt.github.io/posts/</link>
        <description>所有文章 | MyBlog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>276516848@qq.com (hekai)</managingEditor>
            <webMaster>276516848@qq.com (hekai)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 18 Feb 2021 17:52:50 &#43;0800</lastBuildDate><atom:link href="https://msdemt.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Java线程API</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/java%E7%BA%BF%E7%A8%8Bapi/</link>
    <pubDate>Thu, 18 Feb 2021 17:52:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/java%E7%BA%BF%E7%A8%8Bapi/</guid>
    <description><![CDATA[参考： https://blog.csdn.net/sinat_39634657/article/details/81456810 https://blog.csdn.net/suifeng3051/article/details/49443835 https://blog.csdn.net/suifeng3051/article/details/49444177 Runnable Runnable 接口通过 run 方法实现线程逻辑，该方法没有返回值，且不能抛出异常。将该接口的实现作为构造参数传入 Thread 构造方法，然后调用 Thread 的 start() 方法即]]></description>
</item><item>
    <title>Springboot&#43;netty&#43;websocket实现消息推送</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot&#43;netty&#43;websocket%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/</link>
    <pubDate>Thu, 18 Feb 2021 14:44:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot&#43;netty&#43;websocket%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/</guid>
    <description><![CDATA[参考： https://juejin.cn/post/6844904110576107534 实现思路： 前端使用webSocket与服务端创建连接的时候，将用户ID传给服务端 服务端将用户ID与channel关联起来存储，同时将]]></description>
</item><item>
    <title>使用jackson实现json、对象、map之间的转换</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E4%BD%BF%E7%94%A8jackson%E5%AE%9E%E7%8E%B0json%E5%AF%B9%E8%B1%A1map%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
    <pubDate>Thu, 18 Feb 2021 10:16:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E4%BD%BF%E7%94%A8jackson%E5%AE%9E%E7%8E%B0json%E5%AF%B9%E8%B1%A1map%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
    <description><![CDATA[测试类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67]]></description>
</item><item>
    <title>ContextPath介绍</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/contextpath%E4%BB%8B%E7%BB%8D/</link>
    <pubDate>Tue, 09 Feb 2021 09:51:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/contextpath%E4%BB%8B%E7%BB%8D/</guid>
    <description><![CDATA[我们在写 jsp 页面的时候，经常会看到 &lt;%=request.getContextPath()%&gt; ，这个 ContextPath 指的是项目部署到 servlet 容器中的上下文名称。 spring boot 项目，使用内嵌的tomcat 运行时，contextpat]]></description>
</item><item>
    <title>Request和Response中文乱码</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/request%E5%92%8Cresponse%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
    <pubDate>Sun, 07 Feb 2021 17:28:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/request%E5%92%8Cresponse%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
    <description><![CDATA[参考： https://blog.csdn.net/lgl782519197/article/details/107271674/ https://www.cnblogs.com/jinzhiming/p/5765672.html 使用 idea 新建纯 servlet 项目 New Project - Java Enterprise - Specifications 里选择 Servlet - Next - Finish 会自动生成纯 servlet 项目，项目结构如下 pom.xml 依赖主要有 javax.servlet-api ，并且scope 是 provided ，表示打包时不将]]></description>
</item><item>
    <title>Jsp使用var出现警告</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/jsp%E4%BD%BF%E7%94%A8var%E5%87%BA%E7%8E%B0%E8%AD%A6%E5%91%8A/</link>
    <pubDate>Sun, 07 Feb 2021 16:18:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/jsp%E4%BD%BF%E7%94%A8var%E5%87%BA%E7%8E%B0%E8%AD%A6%E5%91%8A/</guid>
    <description><![CDATA[参考： https://www.zhihu.com/question/34294629 https://www.sunzhongwei.com/var-let-const-difference-in-es6 介绍 idea 编辑 jsp 文件时，在 jsp 内使用 var 定义变量时出现警告，信息如下 1 &#39;var&#39; used instead of &#39;let&#39; or &#39;const&#39; idea 推荐使用 let 或 const 替代 var 来定义变量。 因为 es6 推荐不要使用 var]]></description>
</item><item>
    <title>SpringBoot项目JavaScript的位置</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AEjavascript%E7%9A%84%E4%BD%8D%E7%BD%AE/</link>
    <pubDate>Sun, 07 Feb 2021 13:51:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AEjavascript%E7%9A%84%E4%BD%8D%E7%BD%AE/</guid>
    <description><![CDATA[参考： https://www.cnblogs.com/AinRain/p/3793602.html https://www.zhihu.com/question/23196829 介绍 java script 代码该放在页面的什么地方呢？ js 代码需要放在 head 或 body 里。 区别 在 HTML head 部分的 JavaScript 会在被调用的时候才执行 在 HTML body 部分的 JavaScript 会在页面加载的时]]></description>
</item><item>
    <title>Springboot项目集成jsp</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90jsp/</link>
    <pubDate>Fri, 05 Feb 2021 08:56:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90jsp/</guid>
    <description><![CDATA[参考：https://docs.spring.io/spring-boot/docs/current/reference/htmlsingl]]></description>
</item><item>
    <title>Springboot项目运行需要使用临时目录</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E4%B8%B4%E6%97%B6%E7%9B%AE%E5%BD%95/</link>
    <pubDate>Thu, 04 Feb 2021 17:08:45 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C%E9%9C%80%E8%A6%81%E4%BD%BF%E7%94%A8%E4%B8%B4%E6%97%B6%E7%9B%AE%E5%BD%95/</guid>
    <description><![CDATA[临时文件 spring boot 在 centos7 上运行后，在 /tmp 目录自动生成了如下文件夹 1 2 3 [root@centos7 tmp]# ls hsperfdata_root tomcat.8080.9098756374404445017 tomcat-docbase.8080.5749437145987244272 [root@centos7 tmp]# hsperfdata_root 目录存储的是 spring boot 项目运行的 pid （进程号） 1 2 3 4 5 6 [root@centos7 tmp]# ps -ef|grep java root]]></description>
</item><item>
    <title>Springboot国际化</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E5%9B%BD%E9%99%85%E5%8C%96/</link>
    <pubDate>Thu, 04 Feb 2021 09:14:49 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E5%9B%BD%E9%99%85%E5%8C%96/</guid>
    <description><![CDATA[参考： https://www.toutiao.com/i6800527379874710029/ 介绍 国际化，也叫 i18n ，因为国际化的英文是 internationalization ，在首尾字母之间有 18 个字母，所以叫 i18n 。我们的应用如果做了国际化，就可以在不同的语言环境下显示]]></description>
</item></channel>
</rss>
