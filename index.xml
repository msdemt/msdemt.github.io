<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>MyBlog</title>
        <link>https://msdemt.github.io/</link>
        <description>我的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>276516848@qq.com (hekai)</managingEditor>
            <webMaster>276516848@qq.com (hekai)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 24 Feb 2021 09:50:36 &#43;0800</lastBuildDate>
            <atom:link href="https://msdemt.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>梳理Java IO流</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E6%A2%B3%E7%90%86javaio%E6%B5%81/</link>
    <pubDate>Wed, 24 Feb 2021 09:50:36 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E6%A2%B3%E7%90%86javaio%E6%B5%81/</guid>
    <description><![CDATA[参考： https://blog.csdn.net/qq_35598736/article/details/108750468 File File 类主要是对文件和目录的抽象表示，提供了对文件的创建、删除、查找等操作。主要有以下特点 Java 的世界万物皆对象，文件和目录就可抽象为Fi]]></description>
</item><item>
    <title>万字图解Java多线程</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E4%B8%87%E5%AD%97%E5%9B%BE%E8%A7%A3java%E5%A4%9A%E7%BA%BF%E7%A8%8B/</link>
    <pubDate>Sat, 20 Feb 2021 09:38:54 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E4%B8%87%E5%AD%97%E5%9B%BE%E8%A7%A3java%E5%A4%9A%E7%BA%BF%E7%A8%8B/</guid>
    <description><![CDATA[转载自： https://blog.csdn.net/qq_35598736/article/details/108431422 什么是 Java 多线程？ 进程与线程 进程 当一个程序被运行，就开启了一个进程，比如 qq 程序由指令和数据组成，指令要运行，数据要加载，指令被 cpu 加载]]></description>
</item><item>
    <title>Java线程API</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/java%E7%BA%BF%E7%A8%8Bapi/</link>
    <pubDate>Thu, 18 Feb 2021 17:52:50 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/java%E7%BA%BF%E7%A8%8Bapi/</guid>
    <description><![CDATA[参考： https://blog.csdn.net/sinat_39634657/article/details/81456810 https://blog.csdn.net/suifeng3051/article/details/49443835 https://blog.csdn.net/suifeng3051/article/details/49444177 Runnable Runnable 接口通过 run 方法实现线程逻辑，该方法没有返回值，且不能抛出异常。将该接口的实现作为构造参数传入 Thread 构造方法，然后调用 Thread 的 start() 方法即]]></description>
</item><item>
    <title>Springboot&#43;netty&#43;websocket实现消息推送</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot&#43;netty&#43;websocket%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/</link>
    <pubDate>Thu, 18 Feb 2021 14:44:15 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot&#43;netty&#43;websocket%E5%AE%9E%E7%8E%B0%E6%B6%88%E6%81%AF%E6%8E%A8%E9%80%81/</guid>
    <description><![CDATA[参考： https://juejin.cn/post/6844904110576107534 实现思路： 前端使用webSocket与服务端创建连接的时候，将用户ID传给服务端 服务端将用户ID与channel关联起来存储，同时将]]></description>
</item><item>
    <title>使用jackson实现json、对象、map之间的转换</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E4%BD%BF%E7%94%A8jackson%E5%AE%9E%E7%8E%B0json%E5%AF%B9%E8%B1%A1map%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</link>
    <pubDate>Thu, 18 Feb 2021 10:16:40 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/%E4%BD%BF%E7%94%A8jackson%E5%AE%9E%E7%8E%B0json%E5%AF%B9%E8%B1%A1map%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/</guid>
    <description><![CDATA[测试类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67]]></description>
</item><item>
    <title>ContextPath介绍</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/contextpath%E4%BB%8B%E7%BB%8D/</link>
    <pubDate>Tue, 09 Feb 2021 09:51:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/contextpath%E4%BB%8B%E7%BB%8D/</guid>
    <description><![CDATA[我们在写 jsp 页面的时候，经常会看到 &lt;%=request.getContextPath()%&gt; ，这个 ContextPath 指的是项目部署到 servlet 容器中的上下文名称。 spring boot 项目，使用内嵌的tomcat 运行时，contextpat]]></description>
</item><item>
    <title>Request和Response中文乱码</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/request%E5%92%8Cresponse%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</link>
    <pubDate>Sun, 07 Feb 2021 17:28:06 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/request%E5%92%8Cresponse%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</guid>
    <description><![CDATA[参考： https://blog.csdn.net/lgl782519197/article/details/107271674/ https://www.cnblogs.com/jinzhiming/p/5765672.html 使用 idea 新建纯 servlet 项目 New Project - Java Enterprise - Specifications 里选择 Servlet - Next - Finish 会自动生成纯 servlet 项目，项目结构如下 pom.xml 依赖主要有 javax.servlet-api ，并且scope 是 provided ，表示打包时不将]]></description>
</item><item>
    <title>Jsp使用var出现警告</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/jsp%E4%BD%BF%E7%94%A8var%E5%87%BA%E7%8E%B0%E8%AD%A6%E5%91%8A/</link>
    <pubDate>Sun, 07 Feb 2021 16:18:59 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/jsp%E4%BD%BF%E7%94%A8var%E5%87%BA%E7%8E%B0%E8%AD%A6%E5%91%8A/</guid>
    <description><![CDATA[参考： https://www.zhihu.com/question/34294629 https://www.sunzhongwei.com/var-let-const-difference-in-es6 介绍 idea 编辑 jsp 文件时，在 jsp 内使用 var 定义变量时出现警告，信息如下 1 &#39;var&#39; used instead of &#39;let&#39; or &#39;const&#39; idea 推荐使用 let 或 const 替代 var 来定义变量。 因为 es6 推荐不要使用 var]]></description>
</item><item>
    <title>SpringBoot项目JavaScript的位置</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AEjavascript%E7%9A%84%E4%BD%8D%E7%BD%AE/</link>
    <pubDate>Sun, 07 Feb 2021 13:51:20 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AEjavascript%E7%9A%84%E4%BD%8D%E7%BD%AE/</guid>
    <description><![CDATA[参考： https://www.cnblogs.com/AinRain/p/3793602.html https://www.zhihu.com/question/23196829 介绍 java script 代码该放在页面的什么地方呢？ js 代码需要放在 head 或 body 里。 区别 在 HTML head 部分的 JavaScript 会在被调用的时候才执行 在 HTML body 部分的 JavaScript 会在页面加载的时]]></description>
</item><item>
    <title>Springboot项目集成jsp</title>
    <link>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90jsp/</link>
    <pubDate>Fri, 05 Feb 2021 08:56:32 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://msdemt.github.io/posts/java/%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/springboot%E9%A1%B9%E7%9B%AE%E9%9B%86%E6%88%90jsp/</guid>
    <description><![CDATA[参考：https://docs.spring.io/spring-boot/docs/current/reference/htmlsingl]]></description>
</item></channel>
</rss>
