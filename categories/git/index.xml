<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>git on 何凯的博客</title>
        <link>https://msdemt.github.io/categories/git/</link>
        <description>Recent content in git on 何凯的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 07 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://msdemt.github.io/categories/git/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>github 上传大文件</title>
        <link>https://msdemt.github.io/p/github-large-files/</link>
        <pubDate>Thu, 07 Sep 2023 00:00:00 +0000</pubDate>
        
        <guid>https://msdemt.github.io/p/github-large-files/</guid>
        <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;希望将 jdk-8u202-linux-x64.tar.gz (186M) 上传到 github ，从而生成 jdk-8u202-linux-x64.tar.gz 的直链，用于构建包含 jdk 的 docker 镜像&lt;/p&gt;
&lt;h2 id=&#34;github&#34;&gt;github&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/zh/repositories/working-with-files/managing-large-files/about-large-files-on-github&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.github.com/zh/repositories/working-with-files/managing-large-files/about-large-files-on-github&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;github 文件大小限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub 限制存储库中允许的文件大小。 如果尝试添加或更新大于 50 MiB 的文件，您将从 Git 收到警告。 更改仍将成功推送到仓库，但您可以考虑删除提交，以尽量减少对性能的影响。&lt;/li&gt;
&lt;li&gt;如果通过浏览器将文件添加到存储库，该文件不得大于 25 MiB&lt;/li&gt;
&lt;li&gt;GitHub 阻止大小超过 100 MiB 的文件。要跟踪超出此限制的文件，必须使用 &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/zh/repositories/working-with-files/managing-large-files/about-git-large-file-storage&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git Large File Storage (Git LFS)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Git LFS 处理大文件的方式是存储对仓库中文件的引用，而不实际文件本身。 为满足 Git 的架构要求，Git LFS 创建了“指针文件”，充当对实际文件（存储在其他位置）的引用。 GitHub 在仓库中管理此指针文件。 克隆仓库时，GitHub 使用指针文件作为映射来查找大文件。&amp;ndash;&amp;gt; 无法生成文件直链&lt;/li&gt;
&lt;li&gt;Git LFS 的不同最大大小限制取决于 GitHub 计划，免费版文件大小上线为2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果需要在存储库中分发大文件，则可以在 GitHub.com 上创建版本，而不是跟踪文件。参阅 &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/zh/repositories/working-with-files/managing-large-files/about-large-files-on-github#distributing-large-binaries&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;分发大型二进制文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;如果需要在存储库内分发大型文件，可以在 GitHub.com 上创建发行版。 发行版允许您打包软件、发行说明和指向二进制文件的链接，以供其他人使用。 有关详细信息，请访问“&lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/zh/repositories/releasing-projects-on-github/about-releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于发行版&lt;/a&gt;”&lt;/li&gt;
&lt;li&gt;不限制二进制发行版文件的总大小，也不限制用于传递它们的带宽。 但每个文件必须小于 2 GiB。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以，无法直接将体积为 186MB 的 jdk-8u202-linux-x64.tar.gz 上传到仓库，可行的方式如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用 git lfs，问题：无法生成直链（点击链接即可下载）&lt;/li&gt;
&lt;li&gt;使用 &lt;a class=&#34;link&#34; href=&#34;https://docs.github.com/zh/repositories/releasing-projects-on-github/managing-releases-in-a-repository&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;发行版&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;将 jdk 拆分为最大100MB的子包，上传到 github 获取直链，然后在 Dockerfile 中下载所有子包后，将子包合并为完整包
&lt;ul&gt;
&lt;li&gt;拆分子包命令：&lt;code&gt;tar -czf - jdk-8u202-linux-x64.tar.gz | split -b 100m -d - jdk8u202.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;合并子包：&lt;code&gt;cat jdk8u202.tar.gz* | tar -zxf -&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git-lfs-上传文件介绍&#34;&gt;git lfs 上传文件介绍&lt;/h3&gt;
&lt;p&gt;github 使用 &lt;a class=&#34;link&#34; href=&#34;https://github.com/git-lfs/git-lfs&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;git lfs&lt;/a&gt; 上传大于 100MB 文件&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/git-lfs/git-lfs/blob/main/INSTALLING.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ubuntu 安装 git lfs&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;安装 git lfs 软件仓库： &lt;code&gt;curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装 git lfs: &lt;code&gt;sudo apt-get install -y git-lfs&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;进入 git 项目目录： &lt;code&gt;cd large_file_test&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;追踪待上传的大文件： &lt;code&gt;git lfs track files/jdk-8u202-linux-x64.tar.gz&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;执行 &lt;code&gt;git lfs track&lt;/code&gt; 命令后，会生成 &lt;code&gt;.gitattribute&lt;/code&gt; 文件，文件内记录了待上传文件的信息，将 &lt;code&gt;.gitattribute&lt;/code&gt; 文件上传后，才可以上传大文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;.gitattribute&lt;/code&gt; 文件上传
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add .gitattribute&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;add .gitattribute&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin main&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;上传大文件
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git add files/jdk-8u202-linux-x64.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;add jdk-8u202-linux-x64.tar.gz&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin main&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;需要注意的是，通过git-lfs上传文件是有空间限制的，免费用户如果上传的文件超过了1G，账号就会被冻结，所以大家在上传前一定要检查一下自己还剩多少空间（Settings - Billing and plans - Plans and usage - Git LFS Data）。&lt;/p&gt;
&lt;h3 id=&#34;问题&#34;&gt;问题&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;batch response: Git LFS is disabled for this repository.&lt;/p&gt;
&lt;p&gt;如果在上传过程中出现如下报错：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;batch response: Git LFS is disabled for this repository.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Uploading LFS objects:   0% (0/1), 0 B | 0 B/s, done
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;就说明你的账号被冻结了，需要在GitHub后台提交解封申请。&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://support.github.com/contact&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://support.github.com/contact&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;gitee 使用 git lfs上传失败&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git push origin mainwarning: Authentication error: Authentication required: LFS only supported repository in paid or trial enterprise.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;batch response: LFS only supported repository in paid or trial enterprise.      
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Uploading LFS objects:   0% &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;0/1&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;, &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; B &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;0&lt;/span&gt; B/s, &lt;span class=&#34;k&#34;&gt;done&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;error: failed to push some refs to &lt;span class=&#34;s1&#34;&gt;&amp;#39;https://gitee.com/msdemt/large-files.git&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;解决：&lt;br&gt;
删除 &lt;code&gt;.git/hooks/pre-push&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;rm .git/hooks/pre-push
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;然后执行上传&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin main 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://cloud.tencent.com/developer/article/1677003&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://cloud.tencent.com/developer/article/1677003&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>git凭证存储</title>
        <link>https://msdemt.github.io/p/git-credential/</link>
        <pubDate>Thu, 10 Aug 2023 00:00:00 +0000</pubDate>
        
        <guid>https://msdemt.github.io/p/git-credential/</guid>
        <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;
&lt;p&gt;在 &lt;code&gt;ubuntu&lt;/code&gt; 上使用 &lt;code&gt;git clone&lt;/code&gt; 下载时，每次都需要输入密码，而且，现在 &lt;code&gt;github&lt;/code&gt; 要求使用 &lt;code&gt;personal access token&lt;/code&gt;，无法直接输入密码了。&lt;/p&gt;
&lt;p&gt;解决办法&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global credential.helper store
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;使用 &lt;code&gt;store&lt;/code&gt; 模式存储凭证，凭证用明文的形式存放在磁盘中，并且永不过期，存储位置： &lt;code&gt;~/.git-credentials&lt;/code&gt; 中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%87%AD%E8%AF%81%E5%AD%98%E5%82%A8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%87%AD%E8%AF%81%E5%AD%98%E5%82%A8&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;凭证存储&#34;&gt;凭证存储&lt;/h2&gt;
&lt;p&gt;如果你使用的是 &lt;code&gt;SSH&lt;/code&gt; 方式连接远端，并且设置了一个没有口令的密钥，这样就可以在不输入用户名和密码的情况下安全地传输数据。 然而，这对 &lt;code&gt;HTTP&lt;/code&gt; 协议来说是不可能的 &amp;mdash; 每一个连接都是需要用户名和密码的。 这在使用双重认证的情况下会更麻烦，因为你需要输入一个随机生成并且毫无规律的 &lt;code&gt;token&lt;/code&gt; 作为密码。&lt;/p&gt;
&lt;p&gt;幸运的是，&lt;code&gt;Git&lt;/code&gt; 拥有一个凭证系统来处理这个事情。 下面有一些 &lt;code&gt;Git&lt;/code&gt; 的选项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;默认所有都不缓存。 每一次连接都会询问你的用户名和密码。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“&lt;code&gt;cache&lt;/code&gt;” 模式会将凭证存放在内存中一段时间。 密码永远不会被存储在磁盘中，并且在15分钟后从内存中清除。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;“&lt;code&gt;store&lt;/code&gt;” 模式会将凭证用明文的形式存放在磁盘中，并且永不过期。 这意味着除非你修改了你在 &lt;code&gt;Git&lt;/code&gt; 服务器上的密码，否则你永远不需要再次输入你的凭证信息。 这种方式的缺点是你的密码是用明文的方式存放在你的 &lt;code&gt;home&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你使用的是 &lt;code&gt;Mac&lt;/code&gt;，&lt;code&gt;Git&lt;/code&gt; 还有一种 “&lt;code&gt;osxkeychain&lt;/code&gt;” 模式，它会将凭证缓存到你系统用户的钥匙串中。 这种方式将凭证存放在磁盘中，并且永不过期，但是是被加密的，这种加密方式与存放 &lt;code&gt;HTTPS&lt;/code&gt; 凭证以及 &lt;code&gt;Safari&lt;/code&gt; 的自动填写是相同的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果你使用的是 &lt;code&gt;Windows&lt;/code&gt;，你可以安装一个叫做 “&lt;code&gt;Git Credential Manager for Windows&lt;/code&gt;” 的辅助工具。 这和上面说的 “&lt;code&gt;osxkeychain&lt;/code&gt;” 十分类似，但是是使用 &lt;code&gt;Windows Credential Store&lt;/code&gt; 来控制敏感信息。 可以在 &lt;a class=&#34;link&#34; href=&#34;https://github.com/Microsoft/Git-Credential-Manager-for-Windows&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Microsoft/Git-Credential-Manager-for-Windows&lt;/a&gt; 下载。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;你可以设置 Git 的配置来选择上述的一种方式&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git config --global credential.helper cache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;部分辅助工具有一些选项。 “&lt;code&gt;store&lt;/code&gt;” 模式可以接受一个 &lt;code&gt;--file &amp;lt;path&amp;gt;&lt;/code&gt; 参数，可以自定义存放密码的文件路径（默认是 &lt;code&gt;~/.git-credentials&lt;/code&gt; ）。 “&lt;code&gt;cache&lt;/code&gt;” 模式有 &lt;code&gt;--timeout &amp;lt;seconds&amp;gt;&lt;/code&gt; 参数，可以设置后台进程的存活时间（默认是 “&lt;code&gt;900&lt;/code&gt;”，也就是 &lt;code&gt;15&lt;/code&gt; 分钟）。 下面是一个配置 “&lt;code&gt;store&lt;/code&gt;” 模式自定义路径的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ git config --global credential.helper &lt;span class=&#34;s1&#34;&gt;&amp;#39;store --file ~/.my-credentials&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; 甚至允许你配置多个辅助工具。 当查找特定服务器的凭证时，&lt;code&gt;Git&lt;/code&gt; 会按顺序查询，并且在找到第一个回答时停止查询。 当保存凭证时，&lt;code&gt;Git&lt;/code&gt; 会将用户名和密码发送给 所有 配置列表中的辅助工具，它们会按自己的方式处理用户名和密码。 如果你在闪存上有一个凭证文件，但又希望在该闪存被拔出的情况下使用内存缓存来保存用户名密码，&lt;code&gt;.gitconfig&lt;/code&gt; 配置文件如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;[credential]
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    helper = store --file /mnt/thumbdrive/.git-credentials
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    helper = cache --timeout 30000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        <item>
        <title>github pages无法显示图片</title>
        <link>https://msdemt.github.io/p/github-pages-image/</link>
        <pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate>
        
        <guid>https://msdemt.github.io/p/github-pages-image/</guid>
        <description>&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;p&gt;使用hugo-theme-stack主题时，将项目部署到github pages上后，发现categories图片无法显示&lt;/p&gt;
&lt;h2 id=&#34;解决&#34;&gt;解决&lt;/h2&gt;
&lt;p&gt;在静态网页项目根目录下新建名为 &lt;code&gt;.nojekyll&lt;/code&gt; 的文件。&lt;/p&gt;
&lt;p&gt;或者在hugo项目中static目录下新建名为 &lt;code&gt;.nojekyll&lt;/code&gt; 的文件。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;Github Pages 默认是基于 Jekyll 构建，Jekyll 是一个将纯文本转换为静态网站的工具，它构建的网站下各种目录都是特定的以下划线开头命名的文件夹，例如 _layouts、_posts ，它会忽略掉其它的以下划线开头的文件夹和文件。&lt;/p&gt;
&lt;p&gt;.nojekyll 就是告诉 Github Pages 当前网站不是基于 Jekyll 构建的，不要忽略掉下划线开头的文件和文件夹。&lt;/p&gt;
&lt;p&gt;可见 .nojekyll 主要就是用于 Github Pages 这种有默认规则的网站部署平台，如果是部署在自己的服务器上，可以把它删掉。&lt;/p&gt;
&lt;p&gt;反之，如果你的网站不是 Jekyll 构建的，要部署到 Github Pages ，并且包含下划线开头的文件或文件夹，那么你就需要在根目录添加一个 .nojekyll 空文件。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack/issues/726&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/CaiJimmy/hugo-theme-stack/issues/726&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/babywhale/p/13560573.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.cnblogs.com/babywhale/p/13560573.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>git回退版本</title>
        <link>https://msdemt.github.io/p/git-rollback/</link>
        <pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate>
        
        <guid>https://msdemt.github.io/p/git-rollback/</guid>
        <description>&lt;img src="https://msdemt.github.io/p/git-rollback/1_Wjxx83j-qyiNvFBy1yOA1w.webp" alt="Featured image of post git回退版本" /&gt;&lt;h2 id=&#34;git的4个区&#34;&gt;git的4个区&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;工作区（Working Area）
相当于工作空间的目录，即代码的存放位置&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;暂存区（Stage）
也称为 &lt;code&gt;index&lt;/code&gt; ，用来跟踪已暂存文件，一般存在 &lt;code&gt;.git&lt;/code&gt; 下的 &lt;code&gt;index&lt;/code&gt; 文件，所以有时也称暂存区为索引。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;本地仓库（Local Repository）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;远程仓库（Remote Repository）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git文件的5种状态&#34;&gt;git文件的5种状态&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;未修改（Origin）&lt;/li&gt;
&lt;li&gt;已修改（Modified）&lt;/li&gt;
&lt;li&gt;已暂存（Staged）&lt;/li&gt;
&lt;li&gt;已提交（Committed）&lt;/li&gt;
&lt;li&gt;已推送（Pushed）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://msdemt.github.io/images/git/git-status.dio.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;git区和状态&#34;
	
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工作区中文件的初始状态是 &lt;code&gt;未修改&lt;/code&gt;，当我们修改文件后，其状态变为 &lt;code&gt;已修改&lt;/code&gt;，&lt;code&gt;git diff&lt;/code&gt; 命令可以查看已修改但未暂存的文件。（&lt;code&gt;git diff&lt;/code&gt;后输入 &lt;code&gt;q&lt;/code&gt; 可以退出）&lt;/li&gt;
&lt;li&gt;通过 &lt;code&gt;git add&lt;/code&gt; 命令可以把已修改的文件添加到&lt;code&gt;暂存区&lt;/code&gt;，&lt;code&gt;git diff --cached&lt;/code&gt; 可以查看已暂存但未提交的文件。&lt;/li&gt;
&lt;li&gt;通过 &lt;code&gt;git commit&lt;/code&gt; 将代码提交到&lt;code&gt;本地仓库&lt;/code&gt;，&lt;code&gt;git diff [本地分支] [远程分支]&lt;/code&gt; 可以查看已提交本地，但未推送到远程分支的文件。&lt;/li&gt;
&lt;li&gt;通过 &lt;code&gt;git push&lt;/code&gt; 命令将本地分支推送到远程分支。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;回退相关命令&#34;&gt;回退相关命令&lt;/h2&gt;
&lt;h3 id=&#34;git-reset-命令&#34;&gt;git reset 命令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git reset&lt;/code&gt; 是进行回退的具体命令，参数介绍如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;--soft&lt;/code&gt;: 仅仅将头指针恢复，已经 add 的暂存区及工作空间的文件修改不变。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--mixed&lt;/code&gt;: 将头指针恢复，已经 add 的暂存区也会恢复 ，工作空间的代码修改不变。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--hard&lt;/code&gt;: 头指针、暂存区和工作空间的修改都会恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;git-log-命令&#34;&gt;git log 命令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git log&lt;/code&gt; 命令查看git的提交记录，但无法查看已经删除的记录。&lt;/p&gt;
&lt;h3 id=&#34;git-reflog-命令&#34;&gt;git reflog 命令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;git reflog&lt;/code&gt; 命令可以查看所有分支的所有操作记录（包括commit和已被删除的commit记录）&lt;/p&gt;
&lt;h3 id=&#34;回退操作&#34;&gt;回退操作&lt;/h3&gt;
&lt;p&gt;回退操作命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将已修改或暂存但未提交的文件回退: &lt;code&gt;git reset --hard&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将已提交未推送的版本回退: &lt;code&gt;git reset --hard origin/master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将已提交且推送的版本回退：
&lt;ul&gt;
&lt;li&gt;回退到某个版本：&lt;code&gt;git reset --hard &amp;lt;版本号&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将回退的版本强制推送到远程仓库：&lt;code&gt;git push -f&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--hard&lt;/code&gt; 可以替换为其他恢复等级，一般使用 &lt;code&gt;--soft&lt;/code&gt;，这样修改的内容不会丢失&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;版本号可以使用 &lt;code&gt;git log&lt;/code&gt; 或 &lt;code&gt;git reflog&lt;/code&gt; 查看，如 &lt;code&gt;git reset --hard 811aesfi8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git reset --hard &amp;lt;版本号&amp;gt;&lt;/code&gt; 也可以替换为 &lt;code&gt;git reset --hard HEAD&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回退到当前版本：&lt;code&gt;git reset --hard HEAD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回退到上一个版本：&lt;code&gt;git reset --hard HEAD^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回退到上两个版本：&lt;code&gt;git reset --hard HEAD^^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回退到上三个版本：&lt;code&gt;git reset --hard HEAD^^^&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;回退到上十个版本：&lt;code&gt;git reset --hard HEAD~10&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;git-远程覆盖本地&#34;&gt;git 远程覆盖本地&lt;/h2&gt;
&lt;p&gt;可以执行如下命令将远程仓库的代码直接覆盖本地仓库&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git fetch &amp;ndash;all&lt;/li&gt;
&lt;li&gt;git reset &amp;ndash;hard origin/main&lt;/li&gt;
&lt;li&gt;git pull&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;git fetch&lt;/code&gt; 是下载远程仓库的内容，不做任务的合并&lt;br&gt;
&lt;code&gt;git reset&lt;/code&gt; 把 &lt;code&gt;HEAD&lt;/code&gt; 指向刚刚下载的最新版本&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qing040513/article/details/109150075&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/qing040513/article/details/109150075&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/gercke/article/details/119085963&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/gercke/article/details/119085963&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>git设置代理</title>
        <link>https://msdemt.github.io/p/git-proxy/</link>
        <pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate>
        
        <guid>https://msdemt.github.io/p/git-proxy/</guid>
        <description>&lt;img src="https://msdemt.github.io/p/git-proxy/1_Wjxx83j-qyiNvFBy1yOA1w.webp" alt="Featured image of post git设置代理" /&gt;&lt;h2 id=&#34;添加代理&#34;&gt;添加代理&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//http || https
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.proxy http://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global https.proxy https://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;//sock5代理
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.proxy socks5://127.0.0.1:7891
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.proxy socks5://127.0.0.1:7891
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;只针对github配置代理&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#使用socks5代理（推荐）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.https://github.com.proxy socks5://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#使用http代理（不推荐）
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global http.https://github.com.proxy http://127.0.0.1:7890
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#取消socks5代理
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset http.https://github.com.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#取消http代理
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset http.https://github.com.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;查看代理&#34;&gt;查看代理&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --get http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --get https.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;取消代理&#34;&gt;取消代理&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset http.proxy
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config --global --unset https.proxy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;clash-for-windows-代理&#34;&gt;clash for windows 代理&lt;/h2&gt;
&lt;p&gt;clash for windows 的 http 和 socks5 代理使用的是同一个端口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/weimeibuqieryu/article/details/106793645&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/weimeibuqieryu/article/details/106793645&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/Fndroid/clash_for_windows_pkg/issues/1244&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Fndroid/clash_for_windows_pkg/issues/1244&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>git子模块操作</title>
        <link>https://msdemt.github.io/p/git-submodule/</link>
        <pubDate>Fri, 07 Jul 2023 00:00:00 +0000</pubDate>
        
        <guid>https://msdemt.github.io/p/git-submodule/</guid>
        <description>&lt;img src="https://msdemt.github.io/p/git-submodule/1_Wjxx83j-qyiNvFBy1yOA1w.webp" alt="Featured image of post git子模块操作" /&gt;&lt;h2 id=&#34;添加子模块&#34;&gt;添加子模块&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add &amp;lt;url&amp;gt; &amp;lt;path&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;url为子模块git路径
path为子模块存储的目录路径&lt;/p&gt;
&lt;p&gt;如，将 hugo-theme-stack 项目作为子模块添加到本地项目的 themes 目录&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//github.com/CaiJimmy/hugo-theme-stack.git themes
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;子模块添加成功后，执行 &lt;code&gt;git status&lt;/code&gt; 命令可以看到 &lt;code&gt;.gitmodules&lt;/code&gt; 文件已被修改，并新增了一个子模块&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;git diff --cached&lt;/code&gt; 命令可以查看修改内容&lt;/p&gt;
&lt;p&gt;执行 &lt;code&gt;git commit&lt;/code&gt; 命令可以将子模块添加到本地仓库&lt;/p&gt;
&lt;p&gt;添加子模块时使用 &lt;code&gt;-b&lt;/code&gt; 参数指定分支&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;add&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;main&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;URL&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;Git&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;repo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;若子模块已添加，可以在 &lt;code&gt;.gitmodules&lt;/code&gt; 中设置分支，其中 &lt;code&gt;public&lt;/code&gt; 是主模块中安装子模块的名称， &lt;code&gt;stable&lt;/code&gt; 是对应要设置的分支名称。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config -f .gitmodules submodule.public.branch stable
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;执行后，会在 &lt;code&gt;.gitmodules&lt;/code&gt; 中的子模块添加分支（&lt;code&gt;branch = main&lt;/code&gt;），如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;public&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nv&#34;&gt;path&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;public&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;	&lt;span class=&#34;nv&#34;&gt;url&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//github.com/msdemt/msdemt.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;nv&#34;&gt;branch&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;main&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;使用子模块&#34;&gt;使用子模块&lt;/h2&gt;
&lt;p&gt;直接克隆包含子模块的项目时，子模块目录下没有任何文件，需要在项目的根目录下执行如下命令，完成子模块的下载&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;init&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;update&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;或者&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;update&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;init&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;克隆项目的同时下载子模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone &amp;lt;url&amp;gt; --recursive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;更新子模块&#34;&gt;更新子模块&lt;/h2&gt;
&lt;p&gt;子模块的维护者更新子模块后，使用子模块的项目必须手动更新子模块才可以使用最新的子模块。&lt;/p&gt;
&lt;p&gt;在项目中，进入子模块目录下，执行 &lt;code&gt;git pull&lt;/code&gt; 更新，执行 &lt;code&gt;git log&lt;/code&gt; 可以查看子模块的更新内容。&lt;/p&gt;
&lt;p&gt;之后进入项目根目录，使用 &lt;code&gt;git add&lt;/code&gt; 和 &lt;code&gt;git commit&lt;/code&gt; 命令将子模块更新到项目中，然后使用 &lt;code&gt;git push&lt;/code&gt; 命令将更新子模块的项目推送到远程仓库。&lt;/p&gt;
&lt;p&gt;如果自己要修改子模块内容，需要先在子模块根路径下执行 &lt;code&gt;git checkout &amp;lt;分支名&amp;gt;&lt;/code&gt; ，然后才可以对该子模块进行修改和提交，否则&lt;code&gt;git push&lt;/code&gt;提交时出现&lt;code&gt;Everything up-to-date&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;将子模块修改提交后，如果希望将项目依赖的子模块更新到最新版本，需要在项目根路径下执行 &lt;code&gt;git submodule update --remote&lt;/code&gt;，然后将项目提交到远程仓库。&lt;/p&gt;
&lt;h2 id=&#34;删除子模块&#34;&gt;删除子模块&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;git submodule deinit &amp;lt;子模块名称&amp;gt;&lt;/code&gt; 和 &lt;code&gt;git rm &amp;lt;子模块名称&amp;gt;&lt;/code&gt; 命令卸载一个子模块。&lt;/p&gt;
&lt;p&gt;如果添加 &amp;ndash;force 参数，则子模块工作区内即使有本地的修改，也会被移除。&lt;/p&gt;
&lt;p&gt;例如，删除名为 test-submodule 子模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-v&#34; data-lang=&#34;v&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;deinit&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;rm&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;test&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;submodule&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果完全删除子模块，还需要删除项目根路径下的 &lt;code&gt;.gitmodules&lt;/code&gt; 文件和 &lt;code&gt;.git/modules&lt;/code&gt; 目录下的子模块文件&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;子模块更新分支&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;添加子模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add https://github.com/msdemt/msdemt.github.io.git public
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;子模块更新后，在父模块中更新子模块到最新版本&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --remote
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;更新失败，错误如下&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;fatal: Needed a single revision
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;无法在子模组路径 &lt;span class=&#34;s1&#34;&gt;&amp;#39;public&amp;#39;&lt;/span&gt; 中找到当前版本 origin/maste
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;发现父模块依赖的子模块分支为master，正确应该是main分支（子模块项目初始分支是master，后来我新增了main作为默认分支，删掉了master分支）&lt;/p&gt;
&lt;p&gt;参考：https://blog.csdn.net/weboof/article/details/108517187&lt;/p&gt;
&lt;p&gt;更新子模块的分支&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git config -f .gitmodules submodule.public.branch main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;再执行更新子模块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --remote
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;参考：&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/guotianqing/article/details/82391665&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/guotianqing/article/details/82391665&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Lee_queenie/article/details/127386151&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.csdn.net/Lee_queenie/article/details/127386151&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        
    </channel>
</rss>
